// actions文件夹下内容
      //login.js文件
      import { post, get } from '../utils/request'
      import { DOLOGIN } from '../constants/actionTypes'

      export const dologin = () => {
        return {
          type: DOLOGIN,
          payload: '',
        }
      }

//services文件夹下的api.js内容
       export default {
        slide: '/api/home/index/slide', // 图片滚动列表
        nav: '/api/home/index/nav', // 首页导航
        goodsLevel: 'api/home/index/goodsLevel', // 推荐商品列表
        menu: '/api/home/category/menu', // 商品分类列表
        show: '/api/home/category/show',  // 商品分类详情
        dologin: '/index/qybapi/dologin',  // 登录
      }
      
//reducer文件夹内容
      //login.js文件
      import { DOLOGIN } from '../constants/actionTypes'
      
      const initState = {
        token: '',
      }

      export default function (state = initState, action) {
        switch (action.type) {
          case DOLOGIN:
            return { ...state, token: action.payload }

          default:
            return state
        }
      }
      
      //index.js文件
      import login from './login'
      import home from './home'

      export {
          home,
          login
      }

//store.js文件夹内容
      import { createStore, applyMiddleware, compose, combineReducers } from 'redux'
      import promise from 'redux-promise'
      import thunk from 'redux-thunk'
      import { persistReducer } from 'redux-persist'
      import storage from 'redux-persist/lib/storage'
      import autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2'
      import { login, home } from './reducer'

      // 我要对哪些state做数据持久化
      const rootPersistConfig = {
          key: 'root',
          storage: storage,
          stateReconciler: autoMergeLevel2,
      }

      // 单独为 某个 reduce 做数据持久化
      const myPersistReducer = combineReducers({
          home,
          // persistReducer 做数据持久化
          login: persistReducer(
            rootPersistConfig,
            login
          ),
      })

      const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose

      const store = createStore(
          myPersistReducer,
          composeEnhancers(applyMiddleware(promise, thunk))
      )

      export { store }

//入口文件的index.js文件
      import React from 'react';
      import ReactDOM from 'react-dom';
      import 'antd/dist/antd.css'
      import './index.css';
      import Router from './router'
      import { Provider } from 'react-redux'
      import { persistStore } from 'redux-persist'
      import { PersistGate } from 'redux-persist/lib/integration/react'
      import { store } from './store'

      ReactDOM.render(
         <Provider store={store}>
          <PersistGate loading={null} persistor={persistStore(store)}>
            <Router />
          </PersistGate>
         </Provider>,
         document.getElementById('root')
      );

//需要用到数据的页面
      import { login } from '../actions/home'

      export default @connect(state => ({
          name: state.home.data, // 数据
      }), {
          login
      })







